import socket
import time

with open("test_file.bin", "wb") as f:
    f.write(bytearray(1024 * 1024))  # 1MB ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏á

BUFFER_SIZE = 8192
server_ip = "127.0.0.1"
server_port = 12345

client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
client_socket.settimeout(0.5)

filename = "test_file.bin"
seq_num = 0

start_time = time.time()  


print("üì§ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå...")
with open(filename, "rb") as f:
    while True:
        data = f.read(BUFFER_SIZE - 10)  # ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Sequence Number
        if not data:
            break

        packet = f"{seq_num}|".encode() + data  
        while True:
            client_socket.sendto(packet, (server_ip, server_port))
            print(f"Sent SEQ: {seq_num}")
            try:
                ack, _ = client_socket.recvfrom(BUFFER_SIZE)
                if ack.decode() == f"ACK {seq_num}":
                    print(f"‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ACK {seq_num}")
                    seq_num += 1
                    break  # ‡∏™‡πà‡∏á‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡πá‡∏ï‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÑ‡∏î‡πâ
            except socket.timeout:
                print(f"Timeout, resending packet {seq_num}...")

client_socket.sendto(f"{seq_num}|EOF".encode(), (server_ip, server_port))  # ‡∏™‡πà‡∏á EOF ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
end_time = time.time()  # ‚è≥ ‡∏´‡∏¢‡∏∏‡∏î‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤

elapsed_time = end_time - start_time
print(f"File sent successfully! ‚è±Ô∏è ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤: {elapsed_time:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
